from fastapi import FastAPI
from pydantic import BaseModel

app = FastAPI()

# ------ –ë–∞–∑–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã ------
@app.get("/")
def read_root():
    return {"message": "Hello, world!"}

@app.get("/about")
def about():
    return {"info": "–≠—Ç–æ –º–æ–π –ø–µ—Ä–≤—ã–π FastAPI –ø—Ä–æ–µ–∫—Ç –Ω–∞ GitHub!"}

@app.get("/contact")
def contact():
    return {"email": "example@mail.com", "phone": "+1234567890"}

# ------ –ú–æ–¥–µ–ª—å –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è —á–∞—Ç–∞ ------
class ChatRequest(BaseModel):
    message: str
    history: list[dict[str, str]] = []  # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: [{ "role": "user"|"assistant", "content": "..." }]

# ------ –ú–∏–Ω–∏-ChatGPT ------
@app.post("/chat")
def chat(req: ChatRequest):
    user = req.message.strip().lower()

    # –ø—Ä–∏–º–∏—Ç–∏–≤–Ω–∞—è "–ª–æ–≥–∏–∫–∞"
    if not user:
        reply = "–°–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å üôÇ"
    elif "–ø—Ä–∏–≤–µ—Ç" in user or "–∑–¥—Ä–∞–≤" in user:
        reply = "–ü—Ä–∏–≤–µ—Ç! –Ø –º–∏–Ω–∏-ChatGPT –Ω–∞ FastAPI. –ß–µ–º –ø–æ–º–æ—á—å?"
    elif "–∫–∞–∫ –¥–µ–ª–∞" in user:
        reply = "–û—Ç–ª–∏—á–Ω–æ! –ó–∞–ø—É—â–µ–Ω –≤ Codespaces –∏ –≥–æ—Ç–æ–≤ –æ—Ç–≤–µ—á–∞—Ç—å."
    else:
        reply = f"–¢—ã —Å–∫–∞–∑–∞–ª: {req.message}"

    # –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å history –≤ –±—É–¥—É—â–µ–º –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    return {
        "reply": reply,
        "tokens_used": len(req.message.split()),
        "history_len": len(req.history)
    }

# (–ø–æ –∂–µ–ª–∞–Ω–∏—é) healthcheck
@app.get("/health")
def health():
    return {"status": "ok"}@app.post("/chat")
def chat(req: ChatRequest):
    user = req.message.strip().lower()

    # –ü—Ä–æ—Å—Ç–∞—è –∏–º–∏—Ç–∞—Ü–∏—è "–±–æ—Ç–∞"
    if "–ø—Ä–∏–≤–µ—Ç" in user:
        answer = "–ü—Ä–∏–≤–µ—Ç! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"
    elif "–∫–∞–∫ –¥–µ–ª–∞" in user:
        answer = "–£ –º–µ–Ω—è –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ, —Å–ø–∞—Å–∏–±–æ —á—Ç–æ —Å–ø—Ä–æ—Å–∏–ª!"
    else:
        answer = f"–¢—ã —Å–∫–∞–∑–∞–ª: {req.message}"

    # –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞
    return {
        "user": req.message,
        "bot": answer,
        "history": req.history + [{"user": req.message, "bot": answer}]
    }
